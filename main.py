import telebot
import requests
import json
import time
import multiprocessing
from random import randint
from unicodedata import normalize
from functools import lru_cache
from os import listdir
from dotenv import load_dotenv
from os import getenv
from VkBot import *
from Textes import *

# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =


# ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ#
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ü‚£ù‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø #
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†´‚†¨‚†Ω‚¢û‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø #
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£≥‚£ã‚°©‚†ç‚¢â‚£é‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø #
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚°ï‚†Ç‚†Ç‚†í‚†ê‚†Ä‚†Ç‚¢é‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø #
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ü‚†Ñ‚£â‚°ã‚†©‚††‚†Ñ‚†•‚†å‚£ë‚¢ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø #
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢´‚£ò‚°µ‚†∂‚†õ‚†ù‚†´‚†ï‚°∞‚†∑‚¢∂‚£Ø‚†É‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø #
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£±‚£ù‚£Ø‚†≠‚†Ñ‚†¥‚†Ç‚†ñ‚†∫‚†¢‚£¶‚¢°‚¢ô‚£π‚¢∑‚°π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø #
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ü‚£ï‚°ø‚†è‚£Ç‚£°‚£§‚†¥‚†∂‚£∂‚£∂‚£§‚£î‚°£‚¢ô‚¢Æ‚†ü‚£∑‚°Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø #
# ‚£ø‚£ø‚£ø‚£ø‚¢è‚°û‚£°‚£º‚¢ø‚¢á‚¢£‚¢ø‚¢Ñ‚£®‚£ø‚¢ü‚£ø‚†á‚°é‚£∑‚£ï‚†≥‚°∫‚£ü‚°ô‚£ø‚£ø‚£ø‚£ø‚£ø #
# ‚£ø‚£ø‚£ø‚†£‚£Ü‚£ë‚°ç‚†ô‚†≥‚†é‚†Ñ‚†õ‚†∂‚†¶‚†∂‚†ü‚¢ã‚†é‚¢î‚°´‚°µ‚£Æ‚†Æ‚°ì‚†∂‚£æ‚£ø‚£ø‚£ø‚£ø #
# ‚£ø‚°ø‚£±‚£ë‚£î‚£É‚†Ä‚†Ö‚†Ä‚¢Ä‚††‚†í‚†í‚†¢‚†í‚†í‚¢Ç‚£â‚†¢‚†≠‚¢â‚£í‚°Æ‚£â‚†Ω‚†¨‚°ü‚£ø‚£ø‚£ø #
# ‚°ü‚°∏‚¢ñ‚°ö‚¢≤‚°é‚†®‚†Å‚†Ä‚°ê‚†ñ‚†í‚¢í‚†í‚†í‚†í‚†Ç‚††‚†©‚†ç‚††‚¢ú‚¢í‚°≤‚¢ù‚£∫‚†≠‚°º‚¢ø‚£ø #
# ‚£æ‚£∑‚£∑‚£æ‚£∂‚£æ‚£∂‚£∑‚£ø‚£∂‚£∑‚£∂‚£∂‚£∑‚£∑‚£∂‚£æ‚£∂‚£∑‚£æ‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∑‚£æ‚£ø #
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø #
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø #
# _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _#

# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

# —Ö–∏—Ç—Ä—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –í–ª–∞–¥–∞ –õ
limit = 1
mass = listdir(path='meme')

joke_voc = {}
jasons_voc = {}
jason_sub_set = set()

load_dotenv()
bot = telebot.TeleBot(getenv("TELEGRAM_TOKEN"))


# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
def set_changer(operation_type, user_id):
    global jason_sub_set
    if operation_type == 1:
        jason_sub_set.add(user_id)
    elif operation_type == 0:
        jason_sub_set.remove(user_id)


# —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –±–æ—Ç–∞ —Ç–≥ –ø–æ–Ω–æ—Å—Ç—å—é –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –±–æ—Ç–∞ –í–ö


def tgbot() -> None:
    global limit
    global mass

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    # –ó–∞–≥–æ—Ç–æ–≤–∫–∏ –≤–ª–∞–¥–∞ –¥–ª—è –º–µ–º–æ–≤
    for i in mass:
        point = i.find('.')
        limit = max(limit, int(i[:point]))
        limit += 1

    # –ö–æ–Ω–µ—Ü –∑–∞–≥–æ—Ç–æ–≤–æ–∫

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    # –§—É–Ω–∫—Ü–∏—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫–∏, —á—Ç–æ–±—ã –Ω–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä –ø–æ—Ç–æ–º –î–∏–º–∞
    def word(wordd: str) -> str:
        f = normalize("NFKD", wordd.casefold())
        return f

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    # –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–µ—á–∞—Ç–∏ –∫–æ–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –î–∏–º–∞ !–í–ê–ñ–ù–û!
    def mes(inmessage, outmessage):
        return bot.send_message(inmessage.chat.id, str(outmessage))

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    @lru_cache(None)
    # –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
    @bot.message_handler(commands=['start'])
    def starterpack(message):
        # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = telebot.types.KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å —Å–µ–±–µ –±–æ—Ç–∞")
        markup.add(item1)
        bot.send_message(message.chat.id, text=f"–ù–∞–ø–∏—à–∏ –º–Ω–µ –ø—Ä–∏–≤–µ—Ç, —á—Ç–æ–±—ã –ø–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π.", reply_markup=markup)
        # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π
        printinformation(message, "!–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞!")

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    # –§—É–Ω–∫—Ü–∏—è —Å —Ü–∏—Ç–∞—Ç–∞–º–∏
    @bot.message_handler(commands=['jasons_wisdom'])
    def jason_statham(message):
        jasons_voc[message.chat.id] = 0

        markup_inline = telebot.types.InlineKeyboardMarkup()
        item_previous = telebot.types.InlineKeyboardButton(text="<", callback_data="Previous")
        item_next = telebot.types.InlineKeyboardButton(text=">", callback_data="Next")
        item_random = telebot.types.InlineKeyboardButton(text="üá∑", callback_data="Random wisdom")
        if message.chat.id not in jason_sub_set:
            item_jason_subscribe = telebot.types.InlineKeyboardButton(
                text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –º—É–¥—Ä–æ—Å—Ç–µ–π", callback_data="Jason Subscribe")
        else:
            item_jason_subscribe = telebot.types.InlineKeyboardButton(
                text="–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –º—É–¥—Ä–æ—Å—Ç–µ–π", callback_data="Jason Unsubscribe")
        markup_inline.add(item_previous, item_random, item_next)
        markup_inline.add(item_jason_subscribe)

        bot.send_message(message.chat.id, text=str(1) + "/" + str(
            len(jasons_wisdoms)) + "\n\n" + f"<b><i>{jasons_wisdoms[jasons_voc[message.chat.id]]}</i></b>" + "\n\n"
                                               + cjason_statham, reply_markup=markup_inline, parse_mode="HTML")
        printinformation(message, "!–í—ã–∑–≤–∞–Ω–æ –æ–∫–æ—à–∫–æ —Ü–∏—Ç–∞—Ç –°—Ç–µ—Ç—Ö–µ–º–∞!")

    # ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì

    @bot.callback_query_handler(func=lambda call: True)
    def callback_jason(call):

        max_jason = len(jasons_wisdoms) - 1
        markup_inline = telebot.types.InlineKeyboardMarkup()

        item_previous = telebot.types.InlineKeyboardButton(text="<", callback_data="Previous")
        item_next = telebot.types.InlineKeyboardButton(text=">", callback_data="Next")
        item_random = telebot.types.InlineKeyboardButton(text="üá∑", callback_data="Random wisdom")
        if call.message.chat.id not in jason_sub_set:
            item_jason_subscribe = telebot.types.InlineKeyboardButton(
                text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –º—É–¥—Ä–æ—Å—Ç–µ–π", callback_data="Jason Subscribe")
        else:
            item_jason_subscribe = telebot.types.InlineKeyboardButton(
                text="–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –º—É–¥—Ä–æ—Å—Ç–µ–π", callback_data="Jason Unsubscribe")
        markup_inline.add(item_previous, item_random, item_next)
        markup_inline.add(item_jason_subscribe)

        if call.data == "Previous" and jasons_voc[call.message.chat.id] > 0:
            jasons_voc[call.message.chat.id] -= 1
            bot.edit_message_text(str(jasons_voc[call.message.chat.id] + 1) + "/" + str(
                len(jasons_wisdoms)) + "\n\n" + f"<b><i>{jasons_wisdoms[jasons_voc[call.message.chat.id]]}</i></b>"
                                  + "\n\n" + cjason_statham, call.message.chat.id, call.message.message_id,
                                  reply_markup=markup_inline, parse_mode="HTML")
        elif call.data == "Next" and jasons_voc[call.message.chat.id] < max_jason:
            jasons_voc[call.message.chat.id] += 1
            bot.edit_message_text(str(jasons_voc[call.message.chat.id] + 1) + "/" + str(
                len(jasons_wisdoms)) + "\n\n" + f"<b><i>{jasons_wisdoms[jasons_voc[call.message.chat.id]]}</i></b>"
                                  + "\n\n" + cjason_statham, call.message.chat.id, call.message.message_id,
                                  reply_markup=markup_inline, parse_mode="HTML")
        elif call.data == "Random wisdom":
            random_number = randint(0, len(jasons_wisdoms) - 1)
            jasons_voc[call.message.chat.id] = random_number
            bot.edit_message_text(str(jasons_voc[call.message.chat.id] + 1) + "/" + str(
                len(jasons_wisdoms)) + "\n\n" + f"<b><i>{jasons_wisdoms[jasons_voc[call.message.chat.id]]}</i></b>"
                                  + "\n\n" + cjason_statham, call.message.chat.id, call.message.message_id,
                                  reply_markup=markup_inline, parse_mode="HTML")
        elif call.data == "Jason Subscribe":
            set_changer(1, call.message.chat.id)
            if call.message.chat.id in jason_sub_set:
                markup_inline = telebot.types.InlineKeyboardMarkup()
                item_previous = telebot.types.InlineKeyboardButton(text="<", callback_data="Previous")
                item_next = telebot.types.InlineKeyboardButton(text=">", callback_data="Next")
                item_random = telebot.types.InlineKeyboardButton(text="üá∑", callback_data="Random wisdom")
                item_jason_subscribe = telebot.types.InlineKeyboardButton(
                    text="–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –º—É–¥—Ä–æ—Å—Ç–µ–π", callback_data="Jason Unsubscribe")
                markup_inline.add(item_previous, item_random, item_next)
                markup_inline.add(item_jason_subscribe)
                bot.edit_message_text(str(jasons_voc[call.message.chat.id] + 1) + "/" + str(
                    len(jasons_wisdoms)) + "\n\n" + f"<b><i>{jasons_wisdoms[jasons_voc[call.message.chat.id]]}</i></b>"
                                      + "\n\n" + cjason_statham, call.message.chat.id, call.message.message_id,
                                      reply_markup=markup_inline, parse_mode="HTML")
                printinformation(call.message, "!–ü–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ —Ü–∏–∞—Ç–∞—Ç—ã!")
        elif call.data == "Jason Unsubscribe":
            set_changer(0, call.message.chat.id)
            if call.message.chat.id not in jason_sub_set:
                markup_inline = telebot.types.InlineKeyboardMarkup()
                item_previous = telebot.types.InlineKeyboardButton(text="<", callback_data="Previous")
                item_next = telebot.types.InlineKeyboardButton(text=">", callback_data="Next")
                item_random = telebot.types.InlineKeyboardButton(text="üá∑", callback_data="Random wisdom")
                item_jason_subscribe = telebot.types.InlineKeyboardButton(
                    text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º—É–¥—Ä–æ—Å—Ç–µ–π", callback_data="Jason Subscribe")
                markup_inline.add(item_previous, item_random, item_next)
                markup_inline.add(item_jason_subscribe)
                bot.edit_message_text(str(jasons_voc[call.message.chat.id] + 1) + "/" + str(
                    len(jasons_wisdoms)) + "\n\n" + f"<b><i>{jasons_wisdoms[jasons_voc[call.message.chat.id]]}</i></b>"
                                      + "\n\n" + cjason_statham, call.message.chat.id, call.message.message_id,
                                      reply_markup=markup_inline, parse_mode="HTML")
                printinformation(call.message, "!–û—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç —Ü–∏–∞—Ç–∞—Ç!")

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    # –∑–∞–∫–∞–∑ –î–∏–º–∞
    @bot.message_handler(commands=['zakaz'])
    def zakaz(message):
        bot.reply_to(message,
                     text=f"–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —Å–≤–æ–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –≤ –æ—Ç–≤–µ—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–º–∞—Ö–Ω—É–≤ –µ–≥–æ –≤–ª–µ–≤–æ, –∫–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞–ª —è,"
                          f" —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑, —Ç–æ–≥–¥–∞ –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è Diminas –¥–ª—è "
                          f"—É—Ç–æ—á–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–∫–∞–∑–∞")
        bot.register_next_step_handler(message, replying)

    # ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì

    # –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –ø–æ–≤–æ–¥—É –∑–∞–∫–∞–∑–∞ –î–∏–º–∞
    def replying(message):
        if message.reply_to_message:
            bot.send_message(823899679,
                             f"{message.from_user.first_name} {message.from_user.last_name}: " + message.text +
                             " https://t.me/" + str(message.from_user.username))
            with open("Zakazi.txt", "a", encoding="utf-8") as file:
                file.write(vremya(time.ctime().split()) + ", " + str(message.chat.id) + " " + str(
                    message.from_user.first_name) + " " + str(
                    message.from_user.last_name) + ":" + " " + message.text + "\n" + "https://t.me/" + str(
                    message.from_user.username) + "\n")
                file.close()
            bot.send_photo(message.chat.id, open('picture.jpg', 'rb'),
                           caption=f"{message.from_user.first_name}, –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã Diminas")
        else:
            bot.send_message(message.chat.id, "–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω")

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    # –ö–æ–º–∞–Ω–¥–∞ –ø–æ–≥–æ–¥–∞
    @bot.message_handler(commands=['weather'])
    def vivodpogoda(message):
        printinformation(message, "!–≤—ã–∑–æ–≤ –ø–æ–≥–æ–¥—ã!")
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞: ")
        bot.register_next_step_handler(message, get_weather)

    # ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì

    # –§—É–Ω–∫—Ü–∏—è –ø–æ–≥–æ–¥—ã –í–ª–∞–¥ –ü
    def get_weather(message):
        city = message.text.strip().lower()
        res = requests.get(
            f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={getenv("WEATHER_TOKEN")}&units=metric')
        if res.status_code == 200:
            data = json.loads(res.text)
            temp = data["main"]["temp"]
            bot.reply_to(message,
                         f'–°–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞ –≤ –Ω–∞—Å–µ–ª—ë–Ω–Ω–æ–º –ø—É–Ω–∫—Ç–µ:\n'
                         f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞   -   {round(data["main"]["temp"], 1)}¬∞C\n'
                         f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫   -   {round(data["main"]["feels_like"], 1)}¬∞C\n'
                         f'–í–ª–∞–∂–Ω–æ—Å—Ç—å   -   {data["main"]["humidity"]}%\n'
                         f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞   -   {round(data["wind"]["speed"], 1)}–º/c')
            printinformation(message, f"!–≤—ã–∑–æ–≤ –ø–æ–≥–æ–¥—ã, —É—Å–ø–µ—à–Ω–æ: {city}!")
            if int(temp) < 10:
                bot.send_message(message.chat.id, "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞–¥–µ—Ç—å —à–∞–ø–∫—É üôÇ")
        else:
            printinformation(message, "!–≤—ã–∑–æ–≤ –ø–æ–≥–æ–¥—ã, –ø—Ä–æ–≤–∞–ª!")
            bot.reply_to(message, '–ì–æ—Ä–æ–¥ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ')

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    @bot.message_handler(commands=['key'])
    def get_key(message):
        # —Å–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –≤–æ—Å—å–º–µ—Ä–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º chat.id
        key = oct(((message.chat.id + 2) * 5) + 9)
        bot.send_message(message.chat.id, f'–í–∞—à –∫–ª—é—á –æ—Ç —á–∞—Ç–∞ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –∏–∑ VK –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.\n\n '
                                          f'–ù–∞–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–æ "–ü—Ä–∏–≤–µ—Ç" –≤ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ https://vk.me/gooryewood –∏ '
                                          f'—Å–ª–µ–¥—É–π—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.')
        bot.send_message(message.chat.id, key)
        printinformation(message, f"!–ø–æ–ª—É—á–µ–Ω –∫–ª—é—á {key}!")

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    # –ö–æ–º–∞–Ω–¥–∞ –≤—Ä–µ–º—è
    @bot.message_handler(commands=['time'])
    def vivodvremya(message):
        bot.send_message(message.chat.id, vremya(time.ctime().split()))
        printinformation(message, "!–≤—ã–∑–æ–≤ –≤—Ä–µ–º–µ–Ω–∏!")

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    # –ö–æ–º–∞–Ω–¥–∞ –∞–Ω–µ–∫–¥–æ—Ç—ã
    @bot.message_handler(commands=['joke'])
    def anekdot(message):
        anekdoti(message)

    # ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì

    # –§—É–Ω–∫—Ü–∏—è —Å –∞–Ω–µ–∫–¥–æ—Ç–∞–º–∏ –î–∏–º–∞
    def anekdoti(message):
        mid = message.chat.id
        if mid not in joke_voc.keys():
            joke_voc[mid] = manekdoti.copy()
            random_number = randint(0, len(joke_voc[mid]) - 1)
            mes(message, joke_voc[mid][random_number])
            del joke_voc[mid][random_number]
            printinformation(message, "!–≤—ã–¥–∞—á–∞ —à—É—Ç–∫–∏, –≤–ø–µ—Ä–≤—ã–µ —Å–æ–∑–¥–∞–Ω –º–∞—Å—Å–∏–≤ —à—É—Ç–æ–∫!")
        elif len(joke_voc[mid]) == 0:
            joke_voc[mid] = manekdoti.copy()
            random_number = randint(0, len(joke_voc[mid]) - 1)
            mes(message, "–í—ã –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –≤—Å–µ –∞–Ω–µ–∫–¥–æ—Ç—ã, —Å–µ–π—á–∞—Å –æ–Ω–∏ –ø–æ–π–¥—É—Ç –∑–∞–Ω–æ–≤–æ)")
            mes(message, joke_voc[mid][random_number])
            del joke_voc[mid][random_number]
            printinformation(message, "!–≤—ã–¥–∞—á–∞ —à—É—Ç–∫–∏, –æ–±–Ω–æ–≤–ª—ë–Ω –º–∞—Å—Å–∏–≤ —à—É—Ç–æ–∫!")
        else:
            random_number = randint(0, len(joke_voc[mid]) - 1)
            mes(message, joke_voc[mid][random_number])
            del joke_voc[mid][random_number]
            printinformation(message, "!–≤—ã–¥–∞—á–∞ —à—É—Ç–∫–∏!")

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    # –§—É–Ω–∫—Ü–∏—è –í–ª–∞–¥–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ –º–µ–º–æ–≤
    @bot.message_handler(commands=['meme'])
    def meme(message):
        if len(mass) != 0:
            rand = randint(0, len(mass) - 1)
            photo = open(f'meme/{mass[rand]}', 'rb')
            bot.send_photo(message.chat.id, photo)
            photo.close()
            del mass[rand]
            printinformation(message, "!–≤—ã–∑–æ–≤ –≤—ã–¥–∞—á–∏ –º–µ–º–∞, –º–µ–º –≤—ã–¥–∞–Ω!")
        else:
            bot.send_message(message.chat.id, "–ú–µ–º—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å :( \n–ñ–µ–ª–∞–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –Ω–∞—á–∞–ª–æ?"
                                              " –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ '–¥–∞'")
            printinformation(message, "!–≤—ã–∑–æ–≤ –≤—ã–¥–∞—á–∏ –º–µ–º–∞, –º–µ–º—ã –∫–æ–Ω—á–∏–ª–∏—Å—å!")
            bot.register_next_step_handler(message, meme2)

    # ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì

    # 50/50 –î–∏–º—ã –∏ –í–ª–∞–¥–∞ –õ —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª–∏–Ω—ã —Å–ø–∏—Å–∫–∞
    def meme2(message):
        global mass
        if message.content_type == 'text' and word(message.text) == "–¥–∞":
            mass = listdir(path='meme')
            bot.send_message(message.chat.id, text="–°–ø–∏—Å–æ–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            printinformation(message, "!–≤—ã–∑–æ–≤ –≤–æ—Å—Å—Ç–∞–≤–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–º–∞, —É—Å–ø–µ—à–Ω–æ!")
        else:
            bot.send_message(message.chat.id, text="–°–ø–∏—Å–æ–∫ –Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            printinformation(message, "!–≤—ã–∑–æ–≤ –≤–æ—Å—Å—Ç–∞–≤–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–º–∞, –Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    # –º–æ—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–∫—Ç–∏–≤–∞–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ–º–æ–≤ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É
    @bot.message_handler(commands=['photo'])
    def photos(message):
        bot.send_message(message.chat.id, text="–ñ–¥—É –º–µ–º—á–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é)")
        printinformation(message, "!–≤—ã–∑–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–º–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!")
        bot.register_next_step_handler(message, photosaver)

    # ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–∏–µ–Ω–∏—è –º–µ–º–æ–≤ –≤ –ø–∞–ø–∫–µ –Ω–µ –º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –í–ª–∞–¥ –õ
    def photosaver(message):
        global limit
        if message.content_type == 'photo':
            file_id = message.photo[-1].file_id
            file_info = bot.get_file(file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            with open(f"not moderated/{str(limit)}.jpg", 'wb') as new_file:
                new_file.write(downloaded_file)
                new_file.close()
            limit += 1
            printinformation(message, "!–≤—ã–∑–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–º–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é, —É—Å–ø–µ—à–Ω–æ!")
            bot.send_message(chat_id=message.chat.id, text="–ö–∞—Ä—Ç–∏–Ω–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é")
        else:
            printinformation(message, "!–≤—ã–∑–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–º–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é, –ø—Ä–æ–≤–∞–ª–µ–Ω!")
            bot.send_message(message.chat.id, text="–ö–∞–∂–µ—Ç—Å—è, —ç—Ç–æ –Ω–µ –∫–∞—Ä—Ç–∏–Ω–∫–∞")
            bot.send_message(message.chat.id, text="üò¢")

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    # –ù–∞—á–∞–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É—é—â–µ–π –∞–Ω–≥–ª–∏–π—Å–∫—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É –≤ —Ä—É—Å—Å–∫—É—é
    @bot.message_handler(commands=['en_to_ru'])
    def keyboard_transfer(message):
        printinformation(message, "!–≤—ã–∑–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ —Ä—É—Å—Å–∫—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É!")
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç")
        bot.register_next_step_handler(message, en_to_ru)

    # ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì ‚Üì

    # –§—É–Ω–∫—Ü–∏—è, –ø—Ä–µ–æ–±—Ä–∞–∑—É—é—â–∞—è –∞–Ω–≥–ª–∏–π—Å–∫—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É –≤ —Ä—É—Å—Å–∫—É—é
    def en_to_ru(message):
        en_ru = {" ": " ", "A": "—Ñ", "B": "–ò", "C": "–°", "D": "–í", "E": "–£", "F": "–ê", "G": "–ü", "H": "–†", "I": "–®",
                 "J": "–û", "K": "–õ", "L": "–î", "M": "–¨", "N": "–¢", "O": "–©", "P": "–ó", "Q": "–ô", "R": "–ö", "S": "–´",
                 "T": "–ï", "U": "–ì", "V": "–ú", "W": "–¶", "X": "–ß", "Y": "–ù", "Z": "–Ø", "~": "–Å", "a": "—Ñ", "b": "–∏",
                 "c": "—Å", "d": "–≤", "e": "—É", "f": "–∞", "g": "–ø", "h": "—Ä", "i": "—à", "j": "–æ", "k": "–ª", "l": "–¥",
                 "m": "—å", "n": "—Ç", "o": "—â", "p": "–∑", "q": "–π", "r": "–∫", "s": "—ã", "t": "–µ", "u": "–≥", "v": "–º",
                 "w": "—Ü", "x": "—á", "y": "–Ω", "z": "—è", "`": "—ë", ",": "–±", "<": "–ë", ".": "—é", ">": "–Æ", "[": "—Ö",
                 "{": "–•", "_": "_", "\n": "\n", "‚Äô": "‚Äô", "]": "—ä", "}": "–™", "'": "—ç", '"': "–≠", ";": "–∂", ":": "–ñ",
                 "/": ".", "?": ",", "&": "?", "@": '"', "#": "‚Ññ", "$": ";", "^": ":", "|": "/"}
        text = message.text
        for x in en_ru:
            if x in text:
                text = text.replace(x, en_ru[x])
        bot.send_message(message.chat.id, text)
        printinformation(message, "!–≤—ã–∑–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ —Ä—É—Å—Å–∫—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É —É—Å–ø–µ—à–Ω–æ!")

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –î–∏–º–∞
    def printinformation(message, reason):
        print(vremya(time.ctime().split()), message.chat.id, message.from_user.first_name,
              str(message.from_user.last_name) + ":", message.text,
              "https://t.me/" + str(message.from_user.username) + reason)

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    # –§—É–Ω–∫—Ü–∏—è, –ø–µ—Ä–µ–≤–æ–¥—è—â–∞—è –≤—Ä–µ–º—è –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –î–∏–º–∞
    def vremya(rtime):
        p = []
        datas = {"Mon": "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –±–µ–∑–¥–µ–ª—å–Ω–∏–∫", "Tue": "–í—Ç–æ—Ä–Ω–∏–∫ - –∑–∞—Ç–≤–æ—Ä–Ω–∏–∫", "Wed": "–°—Ä–µ–¥–∞ - —Ç–∞–º–∞–¥–∞",
                 "Thu": "–ß–µ—Ç–≤–µ—Ä–≥ - –≤ —à–æ–∫ –ø–æ–≤–µ—Ä–≥", "Fri": "–ü—è—Ç–Ω–∏—Ü–∞ - —Ä–∞–∑–≤—Ä–∞—Ç–Ω–∏—Ü–∞", "Sat": "–°—É–±–±–æ—Ç–∞ - –≤–ø–æ–ª–æ–±–æ—Ä–æ—Ç–∞",
                 "Sun": "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ - –¥–µ–Ω—å –≤–µ—Å–µ–ª—å—è", "Feb": "–§–µ–≤—Ä–∞–ª—è", "Mar": "–ú–∞—Ä—Ç–∞", "Apr": "–ê–ø—Ä–µ–ª—è", "May": "–ú–∞—è",
                 "Jun": "–ò—é–Ω—è", "Jul": "–ò—é–ª—è", "Sep": "–°–µ–Ω—Ç—è–±—Ä—è", "Oct": "–û–∫—Ç—è–±—Ä—è", 'Nov': '–ù–æ—è–±—Ä—è'}
        for x in range(2):
            p.append(datas[rtime[x]])
        for x in range(2, 5):
            p.append(rtime[x])
        vremena = p[3][:5] + "," + " " + p[2] + " " + p[1] + " " + p[4] + "," + " " + p[0]
        return vremena

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    # –ß–ª–µ–Ω –î–∏–º–∞
    def chlen(message):
        k = 0
        ll = message.text.split()
        for x in ll:
            if x.isdigit() and len(ll) == 3:
                k += 1
        bot.send_message(message.chat.id, text=f"–ù–∞—á–∞–ª–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π")
        for x in range(5, 0, -1):
            time.sleep(1)
            bot.send_message(message.chat.id, str(x))
        if k == 3:
            bot.send_photo(message.chat.id, requests.get(
                "https://4lapy.ru/resize/1664x1000/upload/medialibrary/270/2703fd71a17c0843c0b91bbe28c4fe0f.jpg"
                "").content,
                           caption="–î–ª–∏–Ω–∞ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º–æ–≥–æ —á–ª–µ–Ω–∞ —Ä–∞–≤–Ω–∞ " + str(randint(5, 20)) + " —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–æ–≤")
        else:
            bot.send_message(message.chat.id, str("–†–∞–∑–º–µ—Ä—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–±—â–µ–ø—Ä–∏–Ω—è—Ç—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º"))

    # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

    @bot.message_handler(content_types=['text'])  # —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–∞–≥–∏—Ä—É—é—â–∞—è –Ω–∞ —Ç–µ–∫—Å—Ç, –∏—Å–ø–æ–ª—å–∑—É—é—â–∞—è –µ–≥–æ, –∫–∞–∫ –∫–æ–º–∞–Ω–¥—ã
    # –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –î–∏–º–∞
    def privetstvie(umessage):
        w = word(f"{umessage.text}")
        if w == "–ø—Ä–∏–≤–µ—Ç":
            bot.send_message(umessage.chat.id,
                             text=f"–ü—Ä–∏–≤–µ—Ç, —è Diminas Bot, —É –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∏—Ö, "
                                  f"–Ω–∞–ø–∏—à–∏ ¬´–ö–æ–º–∞–Ω–¥—ã¬ª")
        elif w == "–∫–æ–º–∞–Ω–¥—ã":
            bot.send_message(umessage.chat.id,
                             text=f"–ö–æ–º–∞–Ω–¥—ã: \n–ü–æ–≥–æ–¥–∞ - —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É\n–í—Ä–µ–º—è - —É–∑–Ω–∞—Ç—å –≤—Ä–µ–º—è –ø–æ –º—Å–∫\n–ê–Ω–µ–∫–¥–æ—Ç(—ã) - "
                                  f"–ø–æ–ø—Ä–æ—Å–∏—Ç—å –∞–Ω–µ–∫–¥–æ—Ç\n–ö–ª—é—á - –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –¥–ª—è VK\n–ú–µ–º - –ø–æ–ª—É—á–∏—Ç—å –º–µ–º\n–ó–∞–≥—Ä—É–∑–∏—Ç—å - "
                                  f"–∑–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–º –≤ –±–æ—Ç–∞\n–†–∞—Å–∫–ª–∞–¥–∫–∞ - –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–π —Ä–∞—Å–∫–ª–∞–¥–∫–∏ –Ω–∞ —Ä—É—Å—Å–∫—É—é"
                                  f" \n–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±—ã—Å—Ç—Ä—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏, –Ω–∞–∂–∞–≤ —Å—é–¥–∞\n‚¨áÔ∏è")
        elif w == "–≤—Ä–µ–º—è":
            bot.send_message(umessage.chat.id, text=str(vremya(time.ctime().split())))
        elif w == "–ø–æ–≥–æ–¥–∞":
            bot.send_message(umessage.chat.id, "–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞: ")
            bot.register_next_step_handler(umessage, get_weather)
        elif w == "–∞–Ω–µ–∫–¥–æ—Ç" or word(w) == "–∞–Ω–µ–∫–¥–æ—Ç—ã":
            anekdoti(umessage)
        elif w == "—Å–ø–∞—Å–∏–±–æ":
            blagodar = ["–û–±—Ä–∞—â–∞–π—Å—è, –±—Ä–æ", "–ë–∞–∂–æ–∂–æ"]
            bot.send_message(umessage.chat.id, text=str(blagodar[randint(0, len(blagodar) - 1)]))
        elif w == "–∑–∞–∫–∞–∑–∞—Ç—å —Å–µ–±–µ –±–æ—Ç–∞":
            zakaz(umessage)
        elif w == "–∫–∞–∫ –¥–µ–ª–∞?" or w == "–∫–∞–∫ –¥–µ–ª–∞":
            bot.send_message(umessage.chat.id, text=f"–ù–æ—Ä–º–∞–ª—å–Ω–æ")
        elif w == "–º–µ–º":
            meme(umessage)
        elif w == "–∑–∞–≥—Ä—É–∑–∏—Ç—å":
            photos(umessage)
        elif w == "–∫–ª—é—á":
            get_key(umessage)
        elif word(w) == "—á–ª–µ–Ω":
            bot.send_message(umessage.chat.id,
                             text=f"–ù–∞–ø–∏—à–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—è—Ç–∫–∏ —á–µ–ª–æ–≤–µ–∫–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –¥√ó—à√ó–≤ –≤ –º–∏–ª–ª–∏–º–µ—Ç—Ä–∞—Ö,"
                                  f" –Ω–∞–ø—Ä–∏–º–µ—Ä:\n 40 30 10")
            bot.register_next_step_handler(umessage, chlen)
        elif word(w) == "—Ä–∞—Å–∫–ª–∞–¥–∫–∞":
            en_to_ru(umessage)
        else:
            bot.send_message(umessage.chat.id, text=umessage.text)
        printinformation(umessage, "!—Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ!")

    bot.polling(none_stop=True, timeout=123)


# def sander() -> None:
#     while True:
#         print(jason_sub_set)
#         if len(jason_sub_set) > 0:
#             for x in jason_sub_set:
#                 bot.send_message(x, jasons_wisdoms[randint(0, len(jasons_wisdoms() - 1))])
#                 time.sleep(5)
#         time.sleep(10)

# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =


# ...........................................,:;;,..........................................
# ..........................................+%%S%%+,........................................
# .........................................*%%%%%%%*,.......................................
# ........................................;%%%?:*%%%+.......................................
# .......................................,?%%%:.:%%%%,......................................
# .......................................;%%%*...*%%%+......................................
# .......................................*%%%;...:%%%?,.....................................
# ......................................,??%?,...,?%?%:.....................................
# ......................................;%?%*.....*%?%;.....................................
# ......................................+%?%+.....+%?%+.....................................
# ...............................,,,,,::*%%%*;;,..;%%%?:::,,,,..............................
# ......................,,::;++***????%%%%%%%%%?,.:%%%%SSSSSS%%??*+;;:,.....................
# ...................,;+**????????????**%%%%***;..:%%%%??%%%SSS#####SS%?+:..................
# ..................;******++;:::,,,,..,?%%%:.....,%%%%,.,,,,::;;+*?%SSS#S?,................
# .................,*****;:,...........,%%%%:......+??;............,:+%SS##:................
# ..................:+**???***++;;;:::,:%SSS;,,,,,,,,,,,:::;;++*??%SS###S%;.................
# ....................,:++*???????????%%SSSS%?%%%%%%%%%SSSSSSS####SS%%*+:...................
# ........................,,::;;+++***??%SSS%%%%%%%%SSS%%%???**++;:,,.......................
# .....................................,*SSS+,,,,,+SSS?,,...................................
# ......................................+SSS*.....*SSS*.....................................
# ......................................;SSS%,....?SSS;.....................................
# ......................................,SSSS:...,SSSS:.....................................
# .......................................?SSS+...;SSS?......................................
# .......................................;SSS%,..?SSS+......................................
# .......................................,%SSS+.;SSS%,......................................
# ........................................:SSS%+%SSS;.......................................
# .........................................;SSSSSSS+........................................
# ..........................................:*%%%?;.........................................
# ............................................,,,...........................................


# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—É—Å–∫–∞–µ—Ç 2 –ø—Ä–æ—Ü–µ—Å—Å—Å–∞
if __name__ == '__main__':
    p1 = multiprocessing.Process(target=tgbot)
    p1.start()
    p2 = multiprocessing.Process(target=vk_bot_funk)
    p2.start()
    # p3 = multiprocessing.Process(target=sander)
    # p3.start()
